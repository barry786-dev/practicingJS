{"version":3,"file":"SharePlace.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AADA;AAIA;AACA;AAIA;AACA;AANA;AAPA;AAiBA;AACA;AACA;AAEA;AADA;AAFA;AAUA;AACA;AACA;AACA;AACA;;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7FA;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAIA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AA1CA;;;;;;;;;;;;;;;ACAA;;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;;AACA;;AAGA;AACA;AACA;;AACA;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACA;;AAGA;AACA;AACA;;AACA;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAKA;;AAEA;AACA;AACA;AAGA;AACA;;AACA;AAIA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AAKA;AACA;AACA;;AACA;AAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AA5IA;;AA+IA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://my-place/./src/UI/Map.js","webpack://my-place/./src/UI/Modal.js","webpack://my-place/./src/Utility/Location.js","webpack://my-place/webpack/bootstrap","webpack://my-place/webpack/runtime/define property getters","webpack://my-place/webpack/runtime/hasOwnProperty shorthand","webpack://my-place/webpack/runtime/make namespace object","webpack://my-place/./src/SharePlace.js"],"sourcesContent":["export class Map {\n  constructor(coords) {\n    this.coordinates = coords;\n    this.render();\n  }\n\n  render() {\n    /* if (!google) {\n      alert('Could not load maps library - please try again later!');\n      return;\n    }\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      center: this.coordinates,\n      zoom: 16,\n    });\n    new google.maps.Marker({\n      position: this.coordinates,\n      map: this.map,\n    }); */\n    document.getElementById('map').innerHTML = ''; // clear the <p> in the <div id=\"map\">\n    const map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM(),\n        }),\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([\n          this.coordinates.lng,\n          this.coordinates.lat,\n        ]),\n        maxZoom: 18,\n        zoom: 16,\n      }),\n    });\n\n    const markers = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [\n          new ol.Feature({\n            geometry: new ol.geom.Point(\n              ol.proj.fromLonLat([this.coordinates.lng, this.coordinates.lat])\n            ),\n          }),\n        ],\n      }),\n      // style: new ol.style.Style({\n      //   image: new ol.style.Icon({\n      //     anchor: [0.5, 1],\n      //     src: 'marker.png',\n      //   }),\n      // }),\n    });\n\n    /* const marker = new ol.Feature(\n      new ol.geom.Point(\n        ol.proj.fromLonLat([this.coordinates.lng, this.coordinates.lat])\n      )\n    );\n    markers.getSource().addFeature(marker); */\n    map.addLayer(markers);\n\n    /* Add popup when click on the marker */\n    if (document.getElementById('popup')) {\n      this.container = document.getElementById('popup');\n      this.content = document.getElementById('popup-content');\n      this.closer = document.getElementById('popup-closer');\n    }\n\n    const overlay = new ol.Overlay({\n      element: this.container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n    map.addOverlay(overlay);\n    /* this.closer.onclick = function () {\n      overlay.setPosition(undefined);\n     this.closer.blur();\n      return false;\n    }; */\n    map.on('click', (event) => {\n      if (map.hasFeatureAtPixel(event.pixel) === true) {\n        const coordinate = event.coordinate;\n        this.content.innerHTML = `<b>${coordinate[0]}</b><br />${coordinate[1]}`;\n        overlay.setPosition(coordinate);\n      } else {\n        overlay.setPosition(undefined);\n        this.closer.blur();\n      }\n    });\n  }\n}\n","export class Modal {\n  constructor(contentId, fallbackText, messageArray) {\n    this.messageArray = messageArray || [];\n    this.fallbackText = fallbackText || 'Loading...';\n    this.contentTemplateEl = document.getElementById(contentId);\n    this.modalTemplateEl = document.getElementById('modal-template');\n  }\n  show() {\n    if ('content' in document.createElement('template')) {\n      const modalElements = document.importNode(\n        this.modalTemplateEl.content,\n        true\n      );\n      this.modalElement = modalElements.querySelector('.modal');\n      this.backdropElement = modalElements.querySelector('.backdrop');\n      const contentElement = document.importNode(\n        this.contentTemplateEl.content,\n        true\n      );\n      if (this.messageArray.length) {\n        this.modalElement.addEventListener('click', this.hide.bind(this));\n        const h1 = contentElement.querySelector('h1');\n        const p = contentElement.querySelector('p');\n        h1.innerHTML = this.messageArray[0];\n        p.innerHTML = this.messageArray[1];\n      }\n      this.modalElement.appendChild(contentElement);\n\n      document.body.insertAdjacentElement('afterbegin', this.modalElement);\n      document.body.insertAdjacentElement('afterbegin', this.backdropElement);\n    } else {\n      alert(this.fallbackText);\n    }\n  }\n  hide() {\n    if (this.modalElement) {\n      document.body.removeChild(this.modalElement); // this.modalElement.remove();\n      document.body.removeChild(this.backdropElement);\n      this.modalElement = null; //clean up from memory\n      this.backdropElement = null;\n      this.messageArray = [];\n    }\n  }\n}\n","const GOOGLE_API_KEY = '';\n// {lat: 50.4752342, lng: 6.5731188}\nexport async function getAddressFromCoords(coords) {\n  const { lat, lng: lon } = coords;\n  // const response = await fetch(\n  //   `https://maps.googleapis.com/maps/api/geocode/json?latlng=40.714224,-73.961452&key=YOUR_API_KEY`\n  // );\n  const response = await fetch(\n    `https://api.tomtom.com/search/2/reverseGeocode/${lat},${lon}.json?key=${process.env.TOM_TOM_API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch address, please try again');\n  }\n  const data = await response.json();\n  if (data.error_message) {\n    throw new Error(data.error_message);\n  }\n  // const address = data.results[0].formatted_address; // google\n  console.log(data.addresses[0].address);\n  const address = data.addresses[0].address.freeformAddress;\n  return address;\n}\nexport async function getCoordsFromAddress(address) {\n  const urlAddress = encodeURI(address);\n  // const response = await fetch(\n  //   `https://maps.googleapis.com/maps/api/geocode/json?address=${urlAddress}&key=${GOOGLE_API_KEY}`\n  // );\n  const response = await fetch(\n    `https://api.tomtom.com/search/2/geocode/${urlAddress}.json?key=${process.env.TOM_TOM_API_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error('Failed to fetch coordinates, please try again');\n  }\n  const data = await response.json();\n  if (data.error_message) {\n    throw new Error(data.error_message);\n  }\n  // const coordinates = data.results[0].geometry.location; // this is for google\n  console.log(data.results[0]);\n  const coordinates = data.results[0].position;\n  const fullAddress = data.results[0].address.freeformAddress;\n  return [coordinates,fullAddress];\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Modal } from './UI/Modal.js';\nimport { Map } from './UI/Map.js';\nimport { getCoordsFromAddress, getAddressFromCoords } from './Utility/Location';\nclass PlaceFinder {\n  constructor() {\n    this.addressForm = document.querySelector('form');\n    const locateUserBtn = document.getElementById('locate-btn');\n    this.shareBtn = document.getElementById('share-btn');\n    this.sharedLinkInputElement = document.getElementById('share-link');\n\n    locateUserBtn.addEventListener('click', this.locateUserHandler.bind(this));\n    this.shareBtn.addEventListener('click', this.sharePlaceHandler.bind(this));\n    this.addressForm.addEventListener('submit', (e) =>\n      this.findAddressHandler(e)\n    );\n  }\n\n  sharePlaceHandler() {\n    if (!navigator.clipboard) {\n      this.sharedLinkInputElement.select();\n      return;\n    }\n    navigator.clipboard\n      .writeText(this.sharedLinkInputElement.value)\n      .then(() => {\n        alert('the address link is copied into the clipboard');\n      })\n      .catch((err) => {\n        console.log(err);\n        this.sharedLinkInputElement.select();\n      });\n  }\n\n  selectPlace(coordinates, address) {\n    if (this.map) {\n      this.map.render(coordinates);\n    } else {\n      this.map = new Map(coordinates);\n    }\n    console.log(address);\n    /* fetch(\n      `http://localhost:3000/location?address=${encodeURI(address)}&lat=${\n        coordinates.lat\n      }&lng=${coordinates.lng}`,\n      {\n        method: 'POST',\n        body: JSON.stringify({\n          address: address,\n          lat: coordinates.lat,\n          lng: coordinates.lng,\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((data) => {\n        console.log(data);\n        const locationId = data.locId;\n        this.shareBtn.disabled = false;\n        this.sharedLinkInputElement.value = `${location.origin}/my-place?location=${locationId}`;\n      }); */\n\n    this.shareBtn.disabled = false;\n    this.sharedLinkInputElement.value = `${\n      location.origin\n    }/my-place?address=${encodeURI(address)}&lat=${coordinates.lat}&lng=${\n      coordinates.lng\n    }`;\n  }\n\n  locateUserHandler() {\n    if (!navigator.geolocation) {\n      alert(\n        'Location feature is not available in your browser - please use a more modern browser or manually enter an address.'\n      );\n      return;\n    }\n    const modal = new Modal(\n      'loading-modal-content',\n      'Loading location - please wait!'\n    );\n    modal.show();\n    navigator.geolocation.getCurrentPosition(\n      async (successResult) => {\n        const coordinates = {\n          lat: successResult.coords.latitude,\n          lng: successResult.coords.longitude,\n        };\n        console.log(coordinates);\n        const address = await getAddressFromCoords(coordinates);\n        setTimeout(() => {\n          modal.hide();\n        }, 1000);\n        this.selectPlace(coordinates, address);\n      },\n      (error) => {\n        modal.hide();\n        alert(\n          'Could not locate you unfortunately. Please enter an address manually!'\n        );\n      }\n    );\n  }\n  async findAddressHandler(event) {\n    event.preventDefault();\n    /* const formData = new FormData(this.addressForm);\n    const formDataObject = Object.fromEntries(formData.entries());\n    const address = formDataObject.address */\n    const address = event.target.querySelector('input').value;\n    if (!address || address.trim().length === 0) {\n      const errorModal = new Modal(\n        'error-content',\n        'Loading location - please wait!',\n        ['Wrong Entries', 'you can not enter empty values in the Address field']\n      );\n      errorModal.show();\n      return;\n    }\n    const modal = new Modal(\n      'loading-modal-content',\n      'Loading location - please wait!'\n    );\n    modal.show();\n    try {\n      const addressInfo = await getCoordsFromAddress(address);\n      const coordinates = addressInfo[0];\n      const fullAddress = addressInfo[1];\n      const coordinatesForOL = {\n        lat: coordinates.lat,\n        lng: coordinates.lon,\n      };\n      this.selectPlace(coordinatesForOL, fullAddress);\n    } catch (err) {\n      modal.hide();\n      setTimeout(() => {\n        alert(err.message);\n      }, 100);\n    }\n    modal.hide();\n  }\n}\n\nnew PlaceFinder();\n\n/* export async function getAddressFromCoords(coords) {\n  return '6th Avenue'; // return any dummy address you want\n}\n\nexport async function getCoordsFromAddress(address) {\n  return { lat: 47.01, lng: 33.55 }; // return any dummy coordinates you want\n} */\n"],"names":[],"sourceRoot":""}