{"version":3,"file":"MyPlace.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AAEA;AADA;AAIA;AACA;AAIA;AACA;AANA;AAPA;AAiBA;AACA;AACA;AAEA;AADA;AAFA;AAUA;AACA;AACA;AACA;AACA;;AAfA;AAkBA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AADA;AAHA;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA7FA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;;AANA;;AAQA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://my-place/./src/UI/Map.js","webpack://my-place/webpack/bootstrap","webpack://my-place/webpack/runtime/define property getters","webpack://my-place/webpack/runtime/hasOwnProperty shorthand","webpack://my-place/webpack/runtime/make namespace object","webpack://my-place/./src/MyPlace.js"],"sourcesContent":["export class Map {\n  constructor(coords) {\n    this.coordinates = coords;\n    this.render();\n  }\n\n  render() {\n    /* if (!google) {\n      alert('Could not load maps library - please try again later!');\n      return;\n    }\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      center: this.coordinates,\n      zoom: 16,\n    });\n    new google.maps.Marker({\n      position: this.coordinates,\n      map: this.map,\n    }); */\n    document.getElementById('map').innerHTML = ''; // clear the <p> in the <div id=\"map\">\n    const map = new ol.Map({\n      target: 'map',\n      layers: [\n        new ol.layer.Tile({\n          source: new ol.source.OSM(),\n        }),\n      ],\n      view: new ol.View({\n        center: ol.proj.fromLonLat([\n          this.coordinates.lng,\n          this.coordinates.lat,\n        ]),\n        maxZoom: 18,\n        zoom: 16,\n      }),\n    });\n\n    const markers = new ol.layer.Vector({\n      source: new ol.source.Vector({\n        features: [\n          new ol.Feature({\n            geometry: new ol.geom.Point(\n              ol.proj.fromLonLat([this.coordinates.lng, this.coordinates.lat])\n            ),\n          }),\n        ],\n      }),\n      // style: new ol.style.Style({\n      //   image: new ol.style.Icon({\n      //     anchor: [0.5, 1],\n      //     src: 'marker.png',\n      //   }),\n      // }),\n    });\n\n    /* const marker = new ol.Feature(\n      new ol.geom.Point(\n        ol.proj.fromLonLat([this.coordinates.lng, this.coordinates.lat])\n      )\n    );\n    markers.getSource().addFeature(marker); */\n    map.addLayer(markers);\n\n    /* Add popup when click on the marker */\n    if (document.getElementById('popup')) {\n      this.container = document.getElementById('popup');\n      this.content = document.getElementById('popup-content');\n      this.closer = document.getElementById('popup-closer');\n    }\n\n    const overlay = new ol.Overlay({\n      element: this.container,\n      autoPan: true,\n      autoPanAnimation: {\n        duration: 250,\n      },\n    });\n    map.addOverlay(overlay);\n    /* this.closer.onclick = function () {\n      overlay.setPosition(undefined);\n     this.closer.blur();\n      return false;\n    }; */\n    map.on('click', (event) => {\n      if (map.hasFeatureAtPixel(event.pixel) === true) {\n        const coordinate = event.coordinate;\n        this.content.innerHTML = `<b>${coordinate[0]}</b><br />${coordinate[1]}`;\n        overlay.setPosition(coordinate);\n      } else {\n        overlay.setPosition(undefined);\n        this.closer.blur();\n      }\n    });\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import sanitize from 'sanitize-html';\nimport { Map } from './UI/Map';\n\nclass LoadedPlace {\n  constructor(coordinates, address) {\n    new Map(coordinates);\n    const headerTitleEl = document.querySelector('header h1');\n    headerTitleEl.textContent = address;\n    // headerTitleEl.innerHTML = sanitize(address);\n  }\n}\nconst url = new URL(location.href);\nconst queryParams = url.searchParams;\n\nconst coords = {\n  lat: parseFloat(queryParams.get('lat')),\n  lng: +queryParams.get('lng'),\n};\nconst address = queryParams.get('address');\n/* const locId = queryParams.get('location');\nfetch(`http://localhost:3000/location/${locId}`)\n  .then(async (res) => {\n    if (res.status === 404) {\n      const response = await res.json();\n      throw new Error(`${response.message} :>>> ${response.err}`);\n    } else {\n      return res.json();\n    } // end if\n  })\n  .then((data) => {\n    new LoadedPlace(data.coords, data.address);\n  })\n  .catch((err) => {\n    alert(err.message);\n    // location.href = '/';\n  }); */\n\nnew LoadedPlace(coords, address);\n"],"names":[],"sourceRoot":""}